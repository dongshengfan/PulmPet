{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "CharacteristicsScrollBoxController",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "nodeCoil",
    "Node",
    "nodeRoll",
    "nodeContent",
    "bottomPointStartRotation",
    "topPointStartRotation",
    "_interval",
    "_startPosContent",
    "onLoad",
    "node",
    "on",
    "EventType",
    "TOUCH_START",
    "_onTouchStart",
    "bind",
    "start",
    "la",
    "getComponent",
    "Layout",
    "_step",
    "spacingY",
    "y",
    "event",
    "onMoveScroll",
    "currentPointContent",
    "getContentPosition",
    "bais",
    "Math",
    "abs",
    "vr",
    "children",
    "forEach",
    "item",
    "currentPointItem",
    "scaleY",
    "_getScaleItem",
    "height",
    "currentPoint",
    "k"
  ],
  "mappings": ";;AAAA;;;;AAIA;;;;AAIA,IAAIA,qCAAqCC,GAAGC,KAAH,CAAS;AAC9CC,aAASF,GAAGG,SADkC;;AAG9CC,gBAAY;AACRC,kBAAUL,GAAGM,IADL,EACU;AAClBC,kBAAUP,GAAGM,IAFL,EAEU;AAClBE,qBAAaR,GAAGM,IAHR,EAGa;AACrBG,kCAA0B,GAJlB,EAIsB;AAC9BC,+BAAuB,GALf,EAKmB;AAC3BC,mBAAW,CANH,EAMK;AACbC,0BAAkB,IAPV,EAHkC;;AAa9C;;;;AAIAC,UAjB8C,oBAiBtC;AACJ,aAAKC,IAAL,CAAUC,EAAV,CAAaf,GAAGM,IAAH,CAAQU,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAA5C;AACH,KAnB6C;;;AAqB9C;;;;AAIAC,SAzB8C,mBAyBvC;AACH,YAAIC,KAAK,KAAKb,WAAL,CAAiBc,YAAjB,CAA8BtB,GAAGuB,MAAjC,CAAT;AACA,aAAKC,KAAL,GAAaH,GAAGI,QAAhB;AACA,aAAKb,gBAAL,GAAwB,KAAKJ,WAAL,CAAiBkB,CAAzC;AACA,aAAKf,SAAL,GAAiB,KAAKD,qBAAL,GAA6B,KAAKD,wBAAnD;AACH,KA9B6C;;;AAgC9C;;;;;;AAMAS,iBAtC8C,yBAsChCS,KAtCgC,EAsC1B,CAEnB,CAxC6C;;;AA0C9C;;;;;AAKAC,gBA/C8C,wBA+CjCD,KA/CiC,EA+C3B;AAAA;;AAEf,YAAIE,sBAAsBF,MAAMG,kBAAN,EAA1B;AACA,YAAIC,OAAOC,KAAKC,GAAL,CAASJ,oBAAoBH,CAApB,GAAwB,KAAKd,gBAAtC,CAAX;AACA,YAAIsB,KAAK,CAAT;AACA,YAAIL,oBAAoBH,CAApB,GAAwB,KAAKd,gBAAjC,EAAmD;AAC/C,iBAAKJ,WAAL,CAAiB2B,QAAjB,CAA0BC,OAA1B,CAAkC,UAACC,IAAD,EAAU;AACxC,oBAAIC,mBAAmB,MAAK1B,gBAAL,GAAwBsB,EAAxB,GAA6BH,IAApD;AACA,oBAAIO,mBAAmB,MAAK7B,wBAAxB,IAAoD6B,mBAAmB,MAAK5B,qBAAhF,EAAuG;AACnG2B,yBAAKE,MAAL,GAAc,MAAKC,aAAL,CAAmBF,gBAAnB,CAAd;AACH,iBAFD,MAEO;AACHD,yBAAKE,MAAL,GAAc,CAAd;AACH;AACDL,sBAAM,MAAKV,KAAL,GAAaa,KAAKI,MAAxB;AACH,aARD;AASH;AACJ,KA/D6C;;;AAiE9C;;;;;;;AAOAD,iBAxE8C,yBAwEhCE,YAxEgC,EAwEnB;AACvB,YAAIC,IAAI,IAAM,OAAOD,eAAe,KAAKjC,wBAA3B,CAAD,GAAyD,KAAKE,SAA/D,GAA4E,GAAxF;AACA,eAAQgC,IAAI,CAAJ,IAASA,IAAI,CAAd,GAAmB,CAAnB,GAAuBA,CAA9B;AACH;AA3E6C,CAAT,CAAzC",
  "file": "unknown",
  "sourcesContent": [
    "/**\r\n * Created by FIRCorp on 16.04.2017.\r\n */\r\n\r\n/**\r\n * Контроллер скролла характиристик. Производит регулировку элементов бокса харатеристик. Выполняет операции связанные с регулировкой нодов для обеспечения иллюзии вращения барабана куда накручивается/откуда скручивается список характеристик.\r\n * @class CharacteristicsScrollBoxController\r\n */\r\nvar CharacteristicsScrollBoxController = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        nodeCoil: cc.Node,//нод палки\r\n        nodeRoll: cc.Node,//нод блеска\r\n        nodeContent: cc.Node,// нод контента\r\n        bottomPointStartRotation: 281,//нижняя кордина старта поворота\r\n        topPointStartRotation: 361,//верхняя кордина старта поворота\r\n        _interval: 0,//длинна промежутка для сжития паременных\r\n        _startPosContent: null,//стартовая позиция контента бокса!!\r\n    },\r\n\r\n    /**\r\n     * Событие на загрузку сцены.\r\n     * @method onLoad\r\n     */\r\n    onLoad(){\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchStart.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Инициализация по запуску элемента\r\n     * @method start\r\n     */\r\n    start(){\r\n        let la = this.nodeContent.getComponent(cc.Layout);\r\n        this._step = la.spacingY;\r\n        this._startPosContent = this.nodeContent.y;\r\n        this._interval = this.topPointStartRotation - this.bottomPointStartRotation;\r\n    },\r\n\r\n    /**\r\n     * Обработчик старта тача\r\n     * @method _onTouchStart\r\n     * @param event\r\n     * @private\r\n     */\r\n    _onTouchStart(event){\r\n\r\n    },\r\n\r\n    /**\r\n     * Евент движения скролла. Обрабатывает вращении бокса характеристик.Производит сжатие параметров на интервале\r\n     * @method onMoveScroll\r\n     * @param event\r\n     */\r\n    onMoveScroll(event){\r\n\r\n        let currentPointContent = event.getContentPosition();\r\n        let bais = Math.abs(currentPointContent.y - this._startPosContent);\r\n        let vr = 0;\r\n        if (currentPointContent.y > this._startPosContent) {\r\n            this.nodeContent.children.forEach((item) => {\r\n                let currentPointItem = this._startPosContent - vr + bais;\r\n                if (currentPointItem > this.bottomPointStartRotation && currentPointItem < this.topPointStartRotation) {\r\n                    item.scaleY = this._getScaleItem(currentPointItem);\r\n                } else {\r\n                    item.scaleY = 1;\r\n                }\r\n                vr += this._step + item.height;\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Возвращает коэффицент сжатия. Который расчитывается на основе промежутка и текущего положения в этом промежутке.\r\n     * @method _getScaleItem\r\n     * @param currentPoint текущее положение параметра по оси ординат\r\n     * @returns {number} коэффицент сжатия для параметра\r\n     * @private\r\n     */\r\n    _getScaleItem(currentPoint){\r\n        let k = 1 - ((100 * (currentPoint - this.bottomPointStartRotation)) / this._interval) / 100;\r\n        return (k > 1 || k < 0) ? 1 : k;\r\n    },\r\n\r\n});"
  ]
}